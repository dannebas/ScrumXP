/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package info;

import dbUtils.db;
import java.lang.System.Logger;
import java.lang.System.Logger.Level;
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import java.sql.SQLException;
import javax.swing.table.TableCellRenderer;

/**
 *
 * @author Daniel
 */
public class NewComment extends javax.swing.JFrame {

    private DefaultTableModel model;
    private int postId;

    /**
     * Creates new form Comments
     */
    public NewComment(String id) {
        initComponents();
        postId = Integer.parseInt(id);
        setLocationRelativeTo(null);
        //columnmodel.removeColumn(columnmodel.getColumn(2));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlBread = new javax.swing.JPanel();
        taNewComment = new javax.swing.JTextArea();
        btnPostComment = new javax.swing.JButton();
        btnCloseComments = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1022, 600));

        pnlBread.setBackground(new java.awt.Color(45, 95, 125));
        pnlBread.setPreferredSize(new java.awt.Dimension(1022, 600));
        pnlBread.setLayout(null);

        taNewComment.setColumns(20);
        taNewComment.setRows(5);
        pnlBread.add(taNewComment);
        taNewComment.setBounds(50, 60, 320, 150);

        btnPostComment.setText("Post comment");
        btnPostComment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPostCommentActionPerformed(evt);
            }
        });
        pnlBread.add(btnPostComment);
        btnPostComment.setBounds(250, 230, 120, 32);

        btnCloseComments.setText("Close");
        btnCloseComments.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseCommentsActionPerformed(evt);
            }
        });
        pnlBread.add(btnCloseComments);
        btnCloseComments.setBounds(50, 230, 120, 32);

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel1.setText("Comments for post ###");
        pnlBread.add(jLabel1);
        jLabel1.setBounds(100, 20, 220, 24);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlBread, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlBread, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnPostCommentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPostCommentActionPerformed
        saveNewCommentToDB();
    }//GEN-LAST:event_btnPostCommentActionPerformed

    private void btnCloseCommentsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseCommentsActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCloseCommentsActionPerformed


    private void saveNewCommentToDB() {
        String commentText = taNewComment.getText();
        try {
            int commentId = Integer.parseInt(db.getDB().getAutoIncrement("COMMENTS", "COMMENT_ID"));
           
           System.out.println(commentText);
            //System.out.println(commentId + ", '" + User.getUser() + "', '" + commentText + "', " + postId );
           db.getDB().insert("insert into COMMENTS values (" + commentId + ", '" + User.getUser() + "', '" + commentText + "', " + postId + ")");
        } catch (SQLException ex) {
            java.util.logging.Logger.getLogger(NewComment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCloseComments;
    private javax.swing.JButton btnPostComment;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jscrPost;
    private javax.swing.JPanel pnlBread;
    private javax.swing.JTextArea taNewComment;
    // End of variables declaration//GEN-END:variables
}
