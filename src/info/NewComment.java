/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package info;

import dbUtils.db;
import javax.swing.table.DefaultTableModel;
import java.sql.SQLException;

/**
 *
 * @author Daniel
 */
public class NewComment extends javax.swing.JFrame {

    private DefaultTableModel model;
    private int postId;
    

    /**
     * Creates new form Comments
     */
    public NewComment(String id) {
        initComponents();
        postId = Integer.parseInt(id);
        setLocationRelativeTo(null);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlBread = new javax.swing.JPanel();
        taNewComment = new javax.swing.JTextArea();
        btnPostComment = new javax.swing.JButton();
        btnCloseComments = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(400, 200));
        setResizable(false);

        pnlBread.setBackground(new java.awt.Color(255, 255, 255));
        pnlBread.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Add new comment", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 14), new java.awt.Color(44, 95, 125))); // NOI18N
        pnlBread.setMinimumSize(new java.awt.Dimension(400, 200));
        pnlBread.setPreferredSize(new java.awt.Dimension(400, 200));
        pnlBread.setLayout(null);

        taNewComment.setColumns(20);
        taNewComment.setRows(5);
        pnlBread.add(taNewComment);
        taNewComment.setBounds(20, 30, 360, 110);

        btnPostComment.setText("Post comment");
        btnPostComment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPostCommentActionPerformed(evt);
            }
        });
        pnlBread.add(btnPostComment);
        btnPostComment.setBounds(250, 150, 120, 32);

        btnCloseComments.setText("Close");
        btnCloseComments.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseCommentsActionPerformed(evt);
            }
        });
        pnlBread.add(btnCloseComments);
        btnCloseComments.setBounds(20, 150, 120, 32);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlBread, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlBread, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnPostCommentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPostCommentActionPerformed
        saveNewCommentToDB();
    }//GEN-LAST:event_btnPostCommentActionPerformed

    private void btnCloseCommentsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseCommentsActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCloseCommentsActionPerformed

    private void saveNewCommentToDB() {
        String commentText = taNewComment.getText();
        try {
            int commentId = Integer.parseInt(db.getDB().getAutoIncrement("COMMENTS", "COMMENT_ID"));

            System.out.println(commentText);
            //System.out.println(commentId + ", '" + User.getUser() + "', '" + commentText + "', " + postId );
            db.getDB().insert("insert into COMMENTS values (" + commentId + ", '" + User.getUser() + "', '" + commentText + "', " + postId + ")");
        } catch (SQLException ex) {
            java.util.logging.Logger.getLogger(NewComment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCloseComments;
    private javax.swing.JButton btnPostComment;
    private javax.swing.JPanel pnlBread;
    private javax.swing.JTextArea taNewComment;
    // End of variables declaration//GEN-END:variables
}
