/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package info;

import dbUtils.db;
import dbUtils.dbConnection;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author Hedengren
 */
public class EditMeeting extends javax.swing.JFrame {

    private String meetingID;
    private static dbConnection conn;
    private DefaultTableModel model;
    private String user;

    public EditMeeting() {
        this.user = User.getUser();

        conn = db.getDB();

        initComponents();

        TableColumnModel columnmodel = tblMyMeeting.getColumnModel();
        addMeetings();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlBread = new javax.swing.JPanel();
        lblTitle = new javax.swing.JLabel();
        txtFieldTitle = new javax.swing.JTextField();
        lblDate = new javax.swing.JLabel();
        txtFieldDate = new javax.swing.JTextField();
        lblLocation = new javax.swing.JLabel();
        txtFieldTime = new javax.swing.JTextField();
        lblTime = new javax.swing.JLabel();
        txtFieldLocation = new javax.swing.JTextField();
        lblMeetingID = new javax.swing.JLabel();
        lblMeetingIDUpdate = new javax.swing.JLabel();
        btnUpdateMeeting = new javax.swing.JButton();
        scrMyMeetings = new javax.swing.JScrollPane();
        tblMyMeeting = new javax.swing.JTable();
        lblSelectMeeting = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        getContentPane().setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 0, 0));

        pnlBread.setBackground(new java.awt.Color(255, 255, 255));
        pnlBread.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Edit Meetings", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 14), new java.awt.Color(44, 95, 125))); // NOI18N
        pnlBread.setForeground(new java.awt.Color(0, 0, 0));
        pnlBread.setPreferredSize(new java.awt.Dimension(840, 400));
        pnlBread.setLayout(null);

        lblTitle.setForeground(new java.awt.Color(0, 0, 0));
        lblTitle.setText("Title:");
        lblTitle.setPreferredSize(null);
        pnlBread.add(lblTitle);
        lblTitle.setBounds(50, 100, 27, 24);
        pnlBread.add(txtFieldTitle);
        txtFieldTitle.setBounds(110, 100, 210, 24);

        lblDate.setForeground(new java.awt.Color(0, 0, 0));
        lblDate.setText("Date:");
        lblDate.setPreferredSize(null);
        pnlBread.add(lblDate);
        lblDate.setBounds(50, 140, 29, 24);

        txtFieldDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFieldDateActionPerformed(evt);
            }
        });
        pnlBread.add(txtFieldDate);
        txtFieldDate.setBounds(110, 140, 210, 24);

        lblLocation.setForeground(new java.awt.Color(0, 0, 0));
        lblLocation.setText("Location:");
        lblLocation.setPreferredSize(null);
        pnlBread.add(lblLocation);
        lblLocation.setBounds(50, 180, 52, 24);
        pnlBread.add(txtFieldTime);
        txtFieldTime.setBounds(110, 180, 210, 24);

        lblTime.setForeground(new java.awt.Color(0, 0, 0));
        lblTime.setText("Time:");
        lblTime.setPreferredSize(null);
        pnlBread.add(lblTime);
        lblTime.setBounds(50, 220, 31, 24);
        pnlBread.add(txtFieldLocation);
        txtFieldLocation.setBounds(110, 220, 210, 24);

        lblMeetingID.setForeground(new java.awt.Color(0, 0, 0));
        lblMeetingID.setText("Meeting- ID:");
        pnlBread.add(lblMeetingID);
        lblMeetingID.setBounds(20, 50, 66, 24);

        lblMeetingIDUpdate.setForeground(new java.awt.Color(0, 0, 0));
        pnlBread.add(lblMeetingIDUpdate);
        lblMeetingIDUpdate.setBounds(110, 50, 50, 24);

        btnUpdateMeeting.setText("Update meeting");
        btnUpdateMeeting.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateMeetingActionPerformed(evt);
            }
        });
        pnlBread.add(btnUpdateMeeting);
        btnUpdateMeeting.setBounds(200, 260, 119, 32);

        tblMyMeeting.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title", "Date", "Location", "Time", "Meeting - ID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblMyMeeting.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblMyMeetingMouseClicked(evt);
            }
        });
        scrMyMeetings.setViewportView(tblMyMeeting);

        pnlBread.add(scrMyMeetings);
        scrMyMeetings.setBounds(350, 40, 453, 254);

        lblSelectMeeting.setForeground(new java.awt.Color(0, 0, 0));
        lblSelectMeeting.setText("Select the meeting you wish to edit");
        pnlBread.add(lblSelectMeeting);
        lblSelectMeeting.setBounds(460, 20, 197, 16);

        getContentPane().add(pnlBread);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void addMeetings() {

        try {

            model = (DefaultTableModel) tblMyMeeting.getModel();
            model.setRowCount(0);
            String s = db.getDB().fetchSingle("SELECT user from MEETINGS where user='" + user + "';");
            System.out.println(s);

            ArrayList<HashMap<String, String>> meetings = db.getDB().fetchRows("SELECT * FROM MEETINGS WHERE USER ='" + user + "'");

            for (HashMap<String, String> aMeeting : meetings) {

                model.addRow(new Object[]{aMeeting.get("TITLE"), aMeeting.get("DATE"), aMeeting.get("LOCATION"), aMeeting.get("TIME"), aMeeting.get("MEETING_ID")});
            }
        } catch (SQLException ex) {
            //Logger.getLogger(Forum.class.getName()).log(Level.SEVERE, null, ex);

        } catch (NullPointerException e) {
            model.addRow(new Object[]{"No Meetings"});
            System.out.println(e.getMessage());
        }

    }


    private void txtFieldDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFieldDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFieldDateActionPerformed

    private void tblMyMeetingMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMyMeetingMouseClicked
        int selectedRow = tblMyMeeting.getSelectedRow();
        int tal = tblMyMeeting.getColumnCount();

        int[] selectedColumns = tblMyMeeting.getSelectedColumns();

        for (int i = 0; i < tal; i++) {
            if (i == 0) {
                txtFieldTitle.setText(tblMyMeeting.getValueAt(selectedRow, i).toString());
            } else if (i == 1) {
                txtFieldDate.setText(tblMyMeeting.getValueAt(selectedRow, i).toString());
            } else if (i == 2) {
                txtFieldTime.setText(tblMyMeeting.getValueAt(selectedRow, i).toString());
            } else if (i == 3) {

                txtFieldLocation.setText(tblMyMeeting.getValueAt(selectedRow, i).toString());
            } else if (i == 4) {

                lblMeetingIDUpdate.setText(tblMyMeeting.getValueAt(selectedRow, i).toString());
            }

        }

    }//GEN-LAST:event_tblMyMeetingMouseClicked

    private void btnUpdateMeetingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateMeetingActionPerformed
        if (Validation.isCorrectDateFormat(txtFieldDate)) {
            String m = lblMeetingIDUpdate.getText().toString();
            String q1 = "UPDATE MEETINGS SET TITLE='" + txtFieldTitle.getText() + "', DATE ='" + txtFieldDate.getText() + "', TIME='" + txtFieldTime.getText() + "', LOCATION='" + txtFieldLocation.getText() + "' where MEETING_ID=" + m;
            try {
                db.getDB().update(q1);

                tblMyMeeting.removeAll();
                addMeetings();
            } catch (SQLException ex) {
                Logger.getLogger(EditMeeting.class.getName()).log(Level.SEVERE, null, ex);
                System.out.print(ex);
            }
        }
    }//GEN-LAST:event_btnUpdateMeetingActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnUpdateMeeting;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblLocation;
    private javax.swing.JLabel lblMeetingID;
    private javax.swing.JLabel lblMeetingIDUpdate;
    private javax.swing.JLabel lblSelectMeeting;
    private javax.swing.JLabel lblTime;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JPanel pnlBread;
    private javax.swing.JScrollPane scrMyMeetings;
    private javax.swing.JTable tblMyMeeting;
    private javax.swing.JTextField txtFieldDate;
    private javax.swing.JTextField txtFieldLocation;
    private javax.swing.JTextField txtFieldTime;
    private javax.swing.JTextField txtFieldTitle;
    // End of variables declaration//GEN-END:variables
}
